body {
    margin: 0;
    padding: 0;
    height: 100vh;
    width: 100%;
}

header {
	width: 100%;
	padding: 20px 0;
	background: #BBBBBB;
	
}

.caixa {
	position: relative;
	width: 940px; /* Número duro */
	margin: 0 auto;
}

nav {
	/* Sobre as positions:
	
		O position fixed: irá fixar a posição do elemento na coordenada que você definir. A medida que a página é rolada, o elemento continua fixo na posição que você definiu e o conteúdo da página rola normalmente. Geralmente é usado para fixar elementos como cabeçalhos ou sidebars.

		O position relative: posiciona o elemento em relação a si mesmo. Ou seja, o ponto zero será o canto superior esquerdo, e ele começará a contar a partir dali. Todos os positions precisam de um ponto para iniciar o cálculo da coordenada para assim posicionar o elemento na tela. Ao contrário do que muitos acham, esse ponto não é o ponto central do elemento, o ponto base é o canto superior esquerdo do elemento. A partir deste canto, o browser irá calcular a coordenada que você definiu e irá posicionar o elemento no viewport.

		O Position Absolute: é um tanto diferente do Relative. Enquanto o elemento com Position Relative utiliza seu próprio canto para referenciar sua posição, o elemento com Position Absolute se utiliza do ponto superior esquerdo de outros elementos. Estes elementos são os parentes dele do elemento com position absolute. Mais especificamente o pai.

		O Position Static: é o valor padrão para todos os elementos de uma página - todos são inicializados como 'static'. Não há complicação aqui, simplesmente significa que o elemento vai seguir o fluxo da página normalmente. A única boa razão para atribuir explicitamente o valor 'position: static' de um elemento é forçar a remoção de um posicionamento previamente definido.*/
	position: absolute;
	top: 110px;
	right: 0;
}

nav li {
	display: inline;
	margin: 0 0 0 15px; /* Aumenta o espaço entre um item e outro */
}

nav a {
	text-transform: uppercase; /* Faz com que, visualmente, os tesxtos fiquem em Capslock sem necessariamente usar caps no texto do HTML. Usar caps no texto em si é contra a etiqueta (?) da internet */
	color: #000000;
	font-weight: bold;
	font-size: 22px;
	text-decoration: none;
}

nav a:hover {
	color: #C78C19;
	text-decoration: underline;
	transition: 0.4s;
}

.produtos {
	width: 940px;
	margin: 0 auto;
	padding: 45px 0;
}

.produtos li {
	display: inline-block; /* Deixar do lado. Os elementos ficam com o tamanho do seu conteúdo, mas regulável. O tamanho pode ser ajustado, tanto na largura, quanto na altura. */
	text-align: center;
	width: 30%;
	vertical-align: top;
	margin: 0 1.5%;
	padding: 30px 20px;
	box-sizing: border-box; /* As propriedades de largura (width) e de altura (height) incluem o tamanho padding size e a propriedade border, mas não incluem a propriedade margin. */
	border: 2px solid #000000;
	border-radius: 6px;
}

.produtos li:hover {
	transition: 0.4s;
	border-color: #C78C19;
}

.produtos li:active {
	transition: 0.2s;
	border-color: #088C19;	
}

.produtos li:hover h2 {
	transition: 0.4s;
	font-size: 34px;
}

.produtos h2 {
	font-size: 30px;
	font-weight: bold;
}

.produto-descricao {
	font-size: 18px;
}

.produto-preco {
	font-size: 22px;
	font-weight: bold;
	margin-top: 10px;
}

footer {
	text-align: center;
	background: url("bg.jpg");
	padding: 40px 0;
}

.copyright {
	color: #FFFFFF;
	font-size: 13px;
	margin: 20px 0 0;
}